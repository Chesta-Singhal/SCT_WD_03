const cells = document.querySelectorAll('[data-cell]');
const board = document.getElementById('board');
const winningMessage = document.getElementById('winningMessage');
const messageText = document.getElementById('messageText');
const restartBtn = document.getElementById('restartBtn');

let isXTurn = true;

const winningCombos = [
  [0,1,2], [3,4,5], [6,7,8],  // rows
  [0,3,6], [1,4,7], [2,5,8],  // columns
  [0,4,8], [2,4,6]            // diagonals
];

startGame();

restartBtn.addEventListener('click', startGame);

function startGame() {
  isXTurn = true;
  cells.forEach(cell => {
    cell.innerText = '';
    cell.classList.remove('x', 'o');
    cell.addEventListener('click', handleClick, { once: true });
  });
  winningMessage.classList.remove('show');
}

function handleClick(e) {
  const cell = e.target;
  const currentClass = isXTurn ? 'X' : 'O';
  cell.innerText = currentClass;
  cell.classList.add(currentClass.toLowerCase());

  if (checkWin(currentClass)) {
    endGame(false, currentClass);
  } else if (isDraw()) {
    endGame(true);
  } else {
    isXTurn = !isXTurn;
  }
}

function endGame(draw, winner) {
  if (draw) {
    messageText.innerText = "It's a Draw!";
  } else {
    messageText.innerText = `${winner} Wins!`;
  }
  winningMessage.classList.add('show');
}

function isDraw() {
  return [...cells].every(cell => cell.innerText !== '');
}

function checkWin(player) {
  return winningCombos.some(combination => {
    return combination.every(index => {
      return cells[index].innerText === player;
    });
  });
}